{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  name: \"ProductList-page\",\n  data() {\n    return {\n      client: {},\n      orderId: '',\n      // LocalStorage\n      products: [],\n      numItems: ''\n    };\n  },\n  created() {\n    const clientData = JSON.parse(localStorage.getItem('client'));\n    if (clientData) {\n      this.client = clientData;\n    }\n    // Get back LocalStorage\n    const orderId = JSON.parse(localStorage.getItem('selectedOrderId'));\n    if (orderId) {\n      this.orderId = orderId;\n    }\n  },\n  methods: {\n    retrieveProductList() {\n      if (this.orderId) {\n        axios.get(`http://localhost:8080/Produit`).then(response => {\n          this.products = response.data;\n        }).catch(error => {\n          console.error(error);\n        });\n      } else {\n        console.error('OrderID not fond');\n      }\n    },\n    getbackToOreder() {\n      this.$router.push(\"/Orders\");\n    },\n    relaodPage() {\n      window.location.reload();\n    },\n    addNewProductfromListPs() {\n      this.$router.push(\"/Orders\");\n    }\n  },\n  mounted() {\n    this.retrieveProductList();\n  }\n};","map":{"version":3,"names":["axios","name","data","client","orderId","products","numItems","created","clientData","JSON","parse","localStorage","getItem","methods","retrieveProductList","get","then","response","catch","error","console","getbackToOreder","$router","push","relaodPage","window","location","reload","addNewProductfromListPs","mounted"],"sources":["C:\\Users\\Firdaouss\\Desktop\\vue\\front-end\\front-end\\src\\components\\Product\\ProductList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Welcome <b class=\"name-cl\">{{ client.firstName }}</b> </h1>\r\n    <div>\r\n      <p><strong>Email:</strong> {{ client.email }}</p>\r\n      <p><strong>Now you are in Order ID :</strong> {{ orderId }}</p>\r\n    </div>\r\n    <!--button @click=\"logout\">LogOut</button-->\r\n    <div class=\"d-sm-flex align-items-center justify-content-between mb-4\">\r\n\r\n\r\n      <button class=\"d-none d-sm-inline-block btn btn-sm btn-fero  shadow-sm\" @click=\"getbackToOreder()\">\r\n\r\n        Get back to list Orders </button>\r\n      <button class=\"d-none d-sm-inline-block btn btn-sm btn-fero shadow-sm\" @click=\"relaodPage()\">\r\n\r\n        Reload </button>\r\n      <button class=\"d-none d-sm-inline-block btn btn-sm btn-fero shadow-sm\" @click=\"addNewProductfromListPs()\">\r\n\r\n        Suppliers </button>\r\n    </div>\r\n    <div class=\"card shadow mb-4\">\r\n      <div class=\"card-header py-3\">\r\n        <h6 class=\"m-0 font-weight-bold txt-fero\">All Products </h6>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <div class=\"table-responsive\">\r\n          <table class=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellspacing=\"0\">\r\n            <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Name</th>\r\n              <th>Price</th>\r\n              <th>stock quantity</th>\r\n              <th>supplier ID</th>\r\n              <th>number of items</th>\r\n              <th>ADD</th>\r\n            </tr>\r\n            </thead>\r\n            <tfoot>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Name</th>\r\n              <th>Price</th>\r\n              <th>stock quantity</th>\r\n              <th>supplier ID</th>\r\n              <th>number of items</th>\r\n              <th>ADD</th>\r\n\r\n            </tr>\r\n            </tfoot>\r\n            <tbody>\r\n            <tr v-for=\"product in products\" :key=\"product.id\">\r\n              <th scope=\"row\">{{ product.id }}</th>\r\n              <td>{{ product.nom }}</td>\r\n              <td>{{ product.prix }}</td>\r\n              <td>\r\n                {{ product.quantite_stock }}\r\n              </td>\r\n              <td>\r\n                {{ product.fournisseurtIdByProduit }}\r\n              </td>\r\n              <td>\r\n                <input type=\"number\" min=\"0\" step=\"1\" class=\"form-control\" id=\"numItems+{{product.id}}\" v-model=\"numItems\" required>\r\n              </td>\r\n              <td>\r\n                <button class=\"btn btn-fero btn-rounded\" data-mdb-ripple-color=\"dark\"\r\n                        >ADD </button>\r\n              </td>\r\n\r\n            </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!-- end table-->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"ProductList-page\",\r\n  data() {\r\n    return {\r\n      client: {},\r\n      orderId: '', // LocalStorage\r\n      products:[],\r\n      numItems:'',\r\n    };\r\n  },\r\n\r\n  created() {\r\n    const clientData = JSON.parse(localStorage.getItem('client'));\r\n    if (clientData) {\r\n      this.client = clientData;\r\n    }\r\n    // Get back LocalStorage\r\n    const orderId = JSON.parse(localStorage.getItem('selectedOrderId'));\r\n    if (orderId) {\r\n      this.orderId = orderId;\r\n    }\r\n\r\n  },\r\n  methods: {\r\n\r\n    retrieveProductList() {\r\n      if (this.orderId) {\r\n\r\n        axios.get(`http://localhost:8080/Produit`)\r\n            .then((response) => {\r\n              this.products = response.data;\r\n            })\r\n            .catch((error) => {\r\n              console.error(error);\r\n            });\r\n      } else {\r\n        console.error('OrderID not fond');\r\n      }\r\n    },\r\n    getbackToOreder()\r\n    {\r\n      this.$router.push(\"/Orders\");\r\n    },\r\n    relaodPage()\r\n    {\r\n      window.location.reload();\r\n    },\r\n    addNewProductfromListPs()\r\n    {\r\n      this.$router.push(\"/Orders\");\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    this.retrieveProductList();\r\n\r\n  },\r\n};\r\n</script>\r\n<style>\r\n.divider:after,\r\n.divider:before {\r\n  content: \"\";\r\n  flex: 1;\r\n  height: 1px;\r\n  background: #eee;\r\n}\r\n.btn-fero {\r\n  background-color: #791e8d;\r\n  color:#eeeeee;\r\n}\r\n.btn-fero:hover {\r\n   background-color: rgba(128, 32, 148, 0.99);\r\n  color:#eeeeee;\r\n }\r\n.txt-fero{\r\n  color:#791e8d;\r\n}\r\n.name-cl\r\n{\r\n  color: midnightblue;\r\n  text-transform: uppercase;\r\n}\r\n.h-custom {\r\n  height: calc(100% - 73px);\r\n}\r\n@media (max-width: 450px) {\r\n  .h-custom {\r\n    height: 100%;\r\n  }\r\n}\r\n</style>"],"mappings":";AAoFA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,kBAAkB;EACxBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,CAAC,CAAC;MACVC,OAAO,EAAE,EAAE;MAAE;MACbC,QAAQ,EAAC,EAAE;MACXC,QAAQ,EAAC;IACX,CAAC;EACH,CAAC;EAEDC,OAAOA,CAAA,EAAG;IACR,MAAMC,UAAS,GAAIC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAC7D,IAAIJ,UAAU,EAAE;MACd,IAAI,CAACL,MAAK,GAAIK,UAAU;IAC1B;IACA;IACA,MAAMJ,OAAM,GAAIK,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC;IACnE,IAAIR,OAAO,EAAE;MACX,IAAI,CAACA,OAAM,GAAIA,OAAO;IACxB;EAEF,CAAC;EACDS,OAAO,EAAE;IAEPC,mBAAmBA,CAAA,EAAG;MACpB,IAAI,IAAI,CAACV,OAAO,EAAE;QAEhBJ,KAAK,CAACe,GAAG,CAAE,+BAA8B,EACpCC,IAAI,CAAEC,QAAQ,IAAK;UAClB,IAAI,CAACZ,QAAO,GAAIY,QAAQ,CAACf,IAAI;QAC/B,CAAC,EACAgB,KAAK,CAAEC,KAAK,IAAK;UAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACtB,CAAC,CAAC;MACR,OAAO;QACLC,OAAO,CAACD,KAAK,CAAC,kBAAkB,CAAC;MACnC;IACF,CAAC;IACDE,eAAeA,CAAA,EACf;MACE,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,SAAS,CAAC;IAC9B,CAAC;IACDC,UAAUA,CAAA,EACV;MACEC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;IAC1B,CAAC;IACDC,uBAAuBA,CAAA,EACvB;MACE,IAAI,CAACN,OAAO,CAACC,IAAI,CAAC,SAAS,CAAC;IAC9B;EACF,CAAC;EAEDM,OAAOA,CAAA,EAAG;IACR,IAAI,CAACf,mBAAmB,CAAC,CAAC;EAE5B;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}